type Game {
    id: Int!
    teamHome: Team! @hasOne
    team_away: Team! @hasOne
    team_home_score: Int!
    team_away_score: Int!
    result: GameResult!
    created_at: Date
}

extend type Mutation {
  createGame(input: inputCreateGame! @spread): Game
}

extend type Query {
    games(start_at: Date, end_at: Date): [Game!]! @paginate
    game(id: Int! @eq): Game @find
}

enum GameResult {
  DRAW @enum(value: "draw")
  HOME @enum(value: "home")
  AWAY @enum(value: "away")
}

input inputCreateGame{
    team_home_id: Int!,
    team_away_id: Int!,
    team_home_score: Int!,
    team_away_score: Int!
}
